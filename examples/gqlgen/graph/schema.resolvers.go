package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.76

import (
	"context"
	"encoding/base64"
	"examples/gqlgen/graph/model"

	"github.com/asger-noer/go-cursor"
)

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context, input *model.TodoInput) (*cursor.Connection[model.Todo], error) {
	cursorFn := func(t model.Todo) string {
		return base64.StdEncoding.EncodeToString([]byte(t.ID))
	}

	args := []cursor.Argument{
		cursor.First(input.First),
		cursor.Last(input.Last),
		cursor.Before(input.Before),
		cursor.After(input.After),
	}

	// Create a cursor from the edges.
	cur, err := cursor.New(r.Data, cursorFn, args...)
	if err != nil {
		return nil, err
	}

	return &cur, nil
}

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type queryResolver struct{ *Resolver }
